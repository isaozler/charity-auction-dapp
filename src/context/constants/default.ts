import { TTransferParams } from "@/hooks/wallets/useForm";

export type TOrganization = {
  id: string;
  name: string;
};

if (!process.env.NEXT_PUBLIC_PROJECT_ID)
  throw new Error("`NEXT_PUBLIC_PROJECT_ID` env variable is missing.");

export const DEFAULT_MAIN_CHAINS = process.env.NEXT_PUBLIC_NETWORK_ID === 'testnet04' ? [] : [
  // mainnets
  "kadena:mainnet01",
];

export const DEFAULT_CHAIN_ID: TTransferParams['chainId'] = '1';

export const DEFAULT_TEST_CHAINS = [
  // testnets
  "kadena:testnet04",
];

export const NETWORKMAP = {
  mainnet: {
    networkId: 'mainnet01',
    host: 'api.chainweb.com',
  },
  testnet: {
    networkId: 'testnet04',
    host: 'api.testnet.chainweb.com',
  },
};


// TODO: add `kadena` namespace to `caip-api` package to avoid manual specification here.
export const KADENA_CHAIN_DATA/* : ChainsMap */ = {
  ...(process.env.NEXT_PUBLIC_NETWORK_ID === 'testnet04' ? {} : {
    mainnet01: {
      name: "Kadena",
      id: "kadena:mainnet01",
      rpc: ["https://api.chainweb.com"],
      slip44: 626,
      testnet: false,
    }
  }),
  testnet04: {
    name: "Kadena Testnet",
    id: "kadena:testnet04",
    rpc: ["https://api.testnet.chainweb.com"],
    slip44: 626,
    testnet: true,
  },
};

export const DEFAULT_CHAINS = [...DEFAULT_MAIN_CHAINS, ...DEFAULT_TEST_CHAINS];
export const DEFAULT_RECEIVER_CHAINID = 1
export const DEFAULT_PROJECT_ID = process.env.NEXT_PUBLIC_PROJECT_ID;
export const DEFAULT_RELAY_URL = process.env.NEXT_PUBLIC_RELAY_URL;

export const DEFAULT_LOGGER = "debug";

export const DEFAULT_APP_METADATA = {
  description: "Generated by IO",
  url: "http://localhost:3000",
  icons: [
    "http://localhost:3000/favicon.ico"
  ],
  name: "Donate KDA"
};

export const DEFAULT_GITHUB_REPO_URL =
  "https://github.com/WalletConnect/web-examples/tree/main/dapps/react-dapp-v2";

type RelayerType = {
  value: string | undefined;
  label: string;
};

/**
 * KADENA
 */
export enum DEFAULT_KADENA_METHODS {
  KADENA_SIGN_TRANSACTION = "kadena_signTransaction",
  KADENA_SIGN_MESSAGE = "kadena_signMessage",
}

export enum DEFAULT_KADENA_EVENTS { }

export const REGIONALIZED_RELAYER_ENDPOINTS: RelayerType[] = [
  {
    value: DEFAULT_RELAY_URL,
    label: "Default",
  },
  {
    value: "wss://us-east-1.relay.walletconnect.com/",
    label: "US",
  },
  {
    value: "wss://eu-central-1.relay.walletconnect.com/",
    label: "EU",
  },
  {
    value: "wss://ap-southeast-1.relay.walletconnect.com/",
    label: "Asia Pacific",
  },
];

export const availableOrganizations: TOrganization[] = [
  {
    id: "k:f05401cedfb71fbd4e2b3d7b611d581cd0d95436717016f198e241fdedfd2f43",
    name: "ISA WALLET",
  },
  // {
  //   id: "k:e4d1feba099ca4e5a50fb2c2a840fbb8bbcf799684e57a3a51298024d05279f8",
  //   name: "FATMA WALLET",
  // },
  {
    id: "k:b9d6938a44fb5fe20841dfa33663f10360dfd69df37420197dc570cd1a4862ee",
    name: "Organization 1",
  },
]
